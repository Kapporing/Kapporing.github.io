(this["webpackJsonppersonal-site"]=this["webpackJsonppersonal-site"]||[]).push([[0],{109:function(e,t,a){},110:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),r=a(17),s=a.n(r),i=a(34),o=a(35),c=a(45),m=a(44),h=(a(80),a(58),a(27)),u=a(6),d=a(112),E=a(119),p=a(73);var g=function(){return l.a.createElement(d.a,null,l.a.createElement(E.a,{fixed:"top",collapseOnSelect:!0,expand:"md",variant:"light",bg:"white"},l.a.createElement(E.a.Toggle,null),l.a.createElement(E.a.Collapse,null,l.a.createElement(p.a,{className:"ml-auto"},l.a.createElement(p.a.Link,{style:{marginLeft:"20px",marginRight:"20px",color:"#0d4d00"},href:"/"},"Home"),l.a.createElement(p.a.Link,{style:{marginLeft:"20px",marginRight:"20px",color:"#0d4d00"},href:"/about"},"About"),l.a.createElement(p.a.Link,{style:{marginLeft:"20px",marginRight:"20px",color:"#0d4d00"},href:"/resume"},"Resume")))))},f=a(113),b=a(114),w=a(115),y=a(30),v=a(26),k=function(e){Object(c.a)(a,e);var t=Object(m.a)(a);function a(){return Object(i.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"render",value:function(){return l.a.createElement(d.a,null,l.a.createElement(f.a,{className:"show-grid"},""===this.props.picturePath?null:l.a.createElement(b.a,{xs:{order:this.props.alignLeft?-1:1}},l.a.createElement("div",{className:"text-center"},l.a.createElement(w.a,{width:"50%",src:this.props.picturePath,fluid:!0,rounded:!0}))),l.a.createElement(b.a,null,l.a.createElement("div",{style:{fontSize:"calc(0.5vw + 0.5vh + 1vmin)"}}," ",l.a.createElement("p",null,this.props.description)))))}}]),a}(n.Component);var x=function(){var e=0;return l.a.createElement(l.a.Fragment,null,l.a.createElement(d.a,null,l.a.createElement(f.a,null,l.a.createElement(b.a,{xs:12,sm:12,md:12,lg:!0,xl:6},l.a.createElement("div",{style:{marginTop:"130px"},className:"text-center"},l.a.createElement(w.a,{width:"60%",src:"assets/images/uw.jpeg",fluid:!0,rounded:!0}))),l.a.createElement(b.a,{lg:!0,xl:{span:5,offset:1}},l.a.createElement("div",{style:{marginTop:"20px"}},l.a.createElement("h1",{style:{fontSize:"60px"}}," Hello, World! "),l.a.createElement("p",null,"Well, hello there! I'm Ronald William, an undergraduate student at the University of Washington - Seattle ",l.a.createElement("img",{src:"assets/icons/uwlogo.png",onClick:function(){return window.open("http://cs.uw.edu","_blank")},width:"20px",height:"20px",alt:"UW Icon"})," studying Computer Science expecting to graduate in Spring 2021!",l.a.createElement("br",null),l.a.createElement("br",null),"I love to play video games and code! :P",l.a.createElement("br",null),"I love programming in C/C++ and Java. I've done some pretty cool projects that you can take a look at the ",l.a.createElement(h.b,{to:"/home"},"home page"),"! \ud83e\udd29 I've recently started exploring more UI/UX design and frankly, I'm obsessed with it! Not great, but I'm learning!",l.a.createElement("br",null)),l.a.createElement("br",null),l.a.createElement("h5",null,"Catch me elsewhere:"),l.a.createElement(f.a,{className:"justify-content-center"},l.a.createElement(y.SocialIcon,{url:"http://linkedin.com/in/ronaldwilliamwidjaja",target:"_blank"}),l.a.createElement(y.SocialIcon,{url:"https://www.instagram.com/rwwidjaj/",target:"_blank",bgColor:"#C13584"}),l.a.createElement(y.SocialIcon,{url:"http://github.com/Kapporing",target:"_blank",bgColor:"333"}),l.a.createElement(y.SocialIcon,{url:"mailto:rwwidjaj@uw.edu",bgColor:"#ed6b00"})))))),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(d.a,null,l.a.createElement("h1",{style:{fontSize:"50px"}}," My Life in Pictures! "),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(v.Fade,{delay:200,bottom:!0,opposite:!0},l.a.createElement(k,{alignLeft:!!(e%2),picturePath:"assets/images/smallboi.jpeg",description:"I don't quite remember having my picture taken for this but I'm glad that it exists! I think this was taken when I was 4 years old or so. It was taken back in my home country, Jakarta, Indonesia. I've always been drawn to the computer behind me in that picture, I remember using it when it was still running Windows XP (it's not THAT old, but still a relic of the past!) \ud83d\ude0e"}),l.a.createElement("br",null)," ",l.a.createElement("p",{hidden:!0},e++," "),l.a.createElement(k,{alignLeft:!!(e%2),picturePath:"assets/images/family.jpeg",description:"This is my family! I've got two older sisters as well as a younger brother. Even though I hardly get to see them, I really do treasure the small fragments of time we spend together!\ud83d\ude01"}),l.a.createElement("br",null)," ",l.a.createElement("p",{hidden:!0},e++," "),l.a.createElement(k,{alignLeft:!!(e%2),picturePath:"assets/images/kappa.jpeg",description:"I spent a lot of time moving around as a child. Originally from Indonesia, I moved to Singapore when I was ~8 years old and spent another half of my life there. I've made some really great friends, among them are those shown in the picture here!"}),l.a.createElement("br",null)," ",l.a.createElement("p",{hidden:!0},e++," "),l.a.createElement(k,{alignLeft:!!(e%2),picturePath:"assets/images/mrseah.jpeg",description:"During my time in Singapore, I've had A LOT of great memories. Some of my best, though, came from the time I spent in secondary school. For example, here's Mr Seah, my favorite Math teacher from school! "}),l.a.createElement("br",null)," ",l.a.createElement("p",{hidden:!0},e++," "),l.a.createElement(k,{alignLeft:!!(e%2),picturePath:"assets/images/fish.jpeg",description:"After a while, it was time for me to move again and start the next chapter in life.\nI moved to Seattle in 2018 and have been loving it ever since. This is me getting my picture taken at Pike Place Market! It feels great to experience cold weather for once \ud83d\ude0d"}),l.a.createElement("br",null)," ",l.a.createElement("p",{hidden:!0},e++," "),l.a.createElement(k,{alignLeft:!!(e%2),picturePath:"assets/images/scc.jpeg",description:"Finally, this was a picture taken in Shoreline Community College. When I came to Seattle, I started out at this institution and I'm so glad I did, because of the friends that I've made along the way, while working as part of SCC's Student Government!"}),l.a.createElement("br",null)," ",l.a.createElement("p",{hidden:!0},e++," "))))},I=a(116);var S=function(e){return l.a.createElement(l.a.Fragment,null,l.a.createElement(d.a,{style:{paddingTop:"20em",paddingBottom:"20em"}},l.a.createElement("h1",{className:"text-left",style:{fontSize:"60px"}},e.heading),l.a.createElement("div",null,l.a.createElement("h5",null,e.description)),l.a.createElement(I.a,{href:e.pathToPage,variant:"success"},"More")))},T=a(16);var j=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(d.a,{style:{marginTop:"17em",marginBottom:"17em"}},l.a.createElement(b.a,{className:"text-center"},l.a.createElement("h1",{style:{fontSize:"4em",fontFamily:"'Fredoka One', cursive",color:"#6cb360"}}," Ronald William Widjaja "),l.a.createElement("p",{style:{fontSize:"40px"}}," Software Developer"))),l.a.createElement(d.a,{style:{marginBottom:"3em"}},l.a.createElement("h1",{className:"text-center"},"Projects"),l.a.createElement(f.a,{className:"justify-content-center"},l.a.createElement(T.Link,{to:"huskymaps",smooth:!0,duration:500},l.a.createElement(I.a,{variant:"outline-success",style:{margin:"5px",width:"200px"}},"HuskyMaps")),l.a.createElement(T.Link,{to:"searchengine",smooth:!0,duration:500},l.a.createElement(I.a,{variant:"outline-success",style:{margin:"5px",width:"200px"}},"Mini Search-Engine")),l.a.createElement(T.Link,{to:"pong",smooth:!0,duration:500},l.a.createElement(I.a,{variant:"outline-success",style:{margin:"5px",width:"200px"}},"Pong")))),l.a.createElement(v.Fade,{delay:200},l.a.createElement("hr",{style:{borderWidth:"5px",marginTop:"20em",paddingBottom:"0px",marginBottom:"0px"}}),l.a.createElement(d.a,{style:{backgroundImage:"url(assets/images/huskymaps/huskymaps.jpg)",backgroundPosition:"center"},fluid:!0},l.a.createElement(T.Element,{name:"huskymaps"},l.a.createElement(S,{heading:"HuskyMaps",description:"Pathfinding application for Seattle area made with Java with MapBox and OpenStreetMap APIs",pathToPage:"/huskymaps"}))),l.a.createElement("hr",{style:{borderWidth:"5px",padding:"0px",margin:"0px"}}),l.a.createElement(d.a,{style:{backgroundImage:"url(assets/images/searchengine/333gle.jpg)",backgroundPosition:"center"},fluid:!0},l.a.createElement(T.Element,{name:"searchengine"},l.a.createElement(S,{heading:"Mini Search-Engine",description:"Multithreaded Mini-Search Engine built with C/C++",pathToPage:"/searchengine"}))),l.a.createElement("hr",{style:{borderWidth:"5px",padding:"0px",margin:"0px"}}),l.a.createElement(d.a,{style:{backgroundImage:"url(assets/images/pong/pong.jpg)",backgroundPosition:"center"},fluid:!0},l.a.createElement(T.Element,{name:"pong"},l.a.createElement(S,{heading:"Pong",description:"The game, Pong, made with Java's Swing library",pathToPage:"/pong"})))))};var P=function(){return l.a.createElement(d.a,{className:"justify-content-center"},l.a.createElement("div",{className:"text-center"},l.a.createElement("a",{href:"assets/Resume-Ronald-June10.pdf"},l.a.createElement("h2",null," R\xe9sum\xe9 ")),l.a.createElement("br",null)),l.a.createElement(b.a,{lg:10,style:{fontFamily:"'Karla', sans-serif"}},l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:5,offset:3}},l.a.createElement("div",{id:"resume-education"},l.a.createElement("h3",null,l.a.createElement("u",null,"Education")),l.a.createElement("div",null,l.a.createElement("h5",null,l.a.createElement("strong",null,"B.S Computer Science")),l.a.createElement("text",null,l.a.createElement("strong",null,"University of Washington - Seattle")),l.a.createElement("br",null),l.a.createElement("text",null,l.a.createElement("strong",null,"Expected Graduation: June 2021 ")),l.a.createElement("br",null),l.a.createElement("text",null,"Cumulative GPA: 3.65"),l.a.createElement("br",null),l.a.createElement("text",null,l.a.createElement("u",null,"Relevant Coursework:")),l.a.createElement("br",null),l.a.createElement("text",null," Hardware-Software Interface, Data Structures, Systems Programming, Software Design, Database Management")),l.a.createElement("br",null),l.a.createElement("div",null,l.a.createElement("h5",null,l.a.createElement("strong",null,"A.S  Associate in Science")),l.a.createElement("text",null,l.a.createElement("strong",null,"Shoreline Community College")),l.a.createElement("br",null),l.a.createElement("text",null,l.a.createElement("strong",null,"June 2019 ")),l.a.createElement("br",null),l.a.createElement("text",null,"Cumulative GPA: 3.95"),l.a.createElement("br",null),l.a.createElement("text",null,l.a.createElement("u",null,"Relevant Coursework:")),l.a.createElement("br",null),l.a.createElement("text",null," Java Programming, Python Programming, Public Speaking, Calculus Series, Physics Series"))),l.a.createElement("hr",null),l.a.createElement("div",{id:"resume-projects"},l.a.createElement("h3",null,l.a.createElement("u",null,"Programming Projects")),l.a.createElement("br",null),l.a.createElement("div",null,l.a.createElement("h5",null,l.a.createElement("b",null,"Husky Maps")),l.a.createElement("p",null,"Google-Maps like Java application to find the shortest-path directions from one location to another in the Seattle area using the OpenStreetMaps and MapBox API")),l.a.createElement("br",null),l.a.createElement("div",null,l.a.createElement("h5",null,l.a.createElement("b",null,"Mini Search-Engine")),l.a.createElement("p",null,"Multi-threaded search engine built from scratch using the C/C++ programming language. Uses the layout of a typical search-engine to crawl through file directories and index them to serve over the network.")),l.a.createElement("br",null),l.a.createElement("div",null,l.a.createElement("h5",null,l.a.createElement("b",null,"Sudoku Solver")),l.a.createElement("p",null,"Sudoku Solver that reads in boards of type ",l.a.createElement("code",null,".sdk")," and ",l.a.createElement("code",null,".ss")," and fills in the empty spots in the boards.")),l.a.createElement("br",null),l.a.createElement("div",null,l.a.createElement("h5",null,l.a.createElement("b",null,"Pong")),l.a.createElement("p",null,"A simple game of Pong, made using Java's Swing library.")))),l.a.createElement(b.a,null,l.a.createElement("div",{id:"resume-technicalskills"},l.a.createElement("h3",null,l.a.createElement("u",null,"Technical Skills")),l.a.createElement("ul",null,l.a.createElement("li",null,"Java"),l.a.createElement("li",null,"C/C++"),l.a.createElement("li",null,"Python"),l.a.createElement("li",null,"Swift"),l.a.createElement("li",null,"SQL"),l.a.createElement("li",null,"NoSQL: Cypher, SQL++")),l.a.createElement("ul",null,l.a.createElement("li",null,"HTML"),l.a.createElement("li",null,"CSS/Bootstrap Framework"),l.a.createElement("li",null,"JavaScript/TypeScript"),l.a.createElement("li",null,"ReactJS")),l.a.createElement("ul",null,l.a.createElement("li",null,"Linux/Bash"),l.a.createElement("li",null,"Database Clustering"))),l.a.createElement("hr",null),l.a.createElement("div",{id:"resume-otherexperience"},l.a.createElement("h3",null,l.a.createElement("u",null,"Other Experience")),l.a.createElement("div",null,l.a.createElement("h5",null,l.a.createElement("b",null,"Research Assistant - Nanyang Polytechnic")),l.a.createElement("p",null,'Volunteer Research Assistant in Nanyang Polytechnic, Singapore. Conducted a research project with a mentor to answer the question of "what makes a good presentation?." Explored the properties of presentations, such as their use of aesthetics in figuring out the right combination to produce an eye-catching and pleasant presentation.')))))))};var C=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(d.a,{className:"justify-content-center",style:{marginTop:"3em"}},l.a.createElement("div",{className:"text-center"},l.a.createElement("h1",null," Uh-oh looks like the page you're looking for can't be found! :( "),l.a.createElement("br",null),l.a.createElement("h4",null," Here's a picture of dubs to help you find what you're looking for"),l.a.createElement("p",null," \ud83d\udc36 When you're ready, click on Dubs to get back Home! \ud83d\udc3a"),l.a.createElement(h.b,{to:"/home"},l.a.createElement(w.a,{width:"100%",src:"assets/images/dubs.jpg",rounded:!0})))))},A=a(121),L=a(117),N=a(118);var M=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(d.a,{style:{marginTop:"5em"}},l.a.createElement(f.a,null,l.a.createElement(b.a,{lg:!0,xl:{span:4,offset:1}},l.a.createElement("h1",{style:{fontSize:"60px"}}," Husky Maps "),l.a.createElement(A.a,null,l.a.createElement(A.a.Item,{variant:"warning"},l.a.createElement("b",null,"Part of a School Project!")),l.a.createElement(A.a.Item,{variant:"info"},l.a.createElement("b",null,"Time:")," 3 Months"),l.a.createElement(A.a.Item,{variant:"info"},l.a.createElement("b",null,"Language and Utilities:")," Java, OpenStreetMap API, MapBox APIs")),l.a.createElement("br",null)),l.a.createElement(b.a,{xs:12,sm:12,md:12,lg:!0,xl:7},l.a.createElement("div",{className:"text-center"},l.a.createElement(w.a,{width:"100%",src:"assets/images/huskymaps/thumbnail.jpg",rounded:!0})))),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("hr",null)),l.a.createElement(d.a,{className:"justify-content-center"},l.a.createElement("div",{className:"text-center"},l.a.createElement("h2",null," Design and Outcome "),l.a.createElement("br",null)),l.a.createElement(b.a,{lg:10},l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Overview ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"First, we start by analyzing the details of what the Husky Maps application needs. As a visualization, the below image describes the overall steps we will take to build the application.",l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(w.a,{width:"100%",src:"assets/images/huskymaps/overview.jpg",rounded:!0}),l.a.createElement("br",null),l.a.createElement("br",null),"First we need to start off with the auto-complete function, which is used to return suggestions of possible matches of places that the user is currently trying to type. Then, we use the information that we have from the MapBox and OpenStreetMap APIs to get a list of points and directions out of that point to navigate through the map. Finally, we get the shortest path between two points that the user has selected and display it on the App."))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Autocomplete ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"The first part of our HuskyMaps app is the Autocomplete function. Given a list of locations as well as their ",l.a.createElement("em",null,"weight")," (how likely they are to be suggested), predict how likely it is that the user is typing each query and present the user a list of the top-matching queries, in descending order of weight. The way we do this efficiently is by having having a class that stores the country as a ",l.a.createElement("code",null,"String")," as well as its weight as a ",l.a.createElement("code",null,"long"),", then doing a binary search over all the terms. Since the weight can be extremely high, we choose to use ",l.a.createElement("code",null,"long")," instead of ",l.a.createElement("code",null,"int")," to prevent Integer overflow.",l.a.createElement("br",null),"As a checkpoint, we also had a GUI to ensure its correctness as well as a sort of visualization for the end goal.",l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(w.a,{width:"100%",src:"assets/images/huskymaps/autocompletegui.jpg",rounded:!0})))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," K-D Tree ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"A K-Dimensional Tree is essentially a binary search tree that uses a K-tiered approach in determining the position of a Node in the tree. Since we do not have infinitely many points, if a user clicks on a point on the map, we need to be able to know the closest point to the user's click.",l.a.createElement("br",null),"In the case of the HuskyMaps app, since we are dealing with 2-Dimensional data, (i.e points have X and Y coordinates), we can efficiently store the points in a 2-Dimensional tree in order to do achieve a faster lookup time for a specific point or a point closest to the users' input. The runtime of a binary search is ",l.a.createElement("code",null,"\u03b8(logN)"),". However, the worst case scenario where a tree leans to one side would still yield ",l.a.createElement("code",null,"O(N)"),".",l.a.createElement("br",null),l.a.createElement(w.a,{width:"50%",src:"assets/images/huskymaps/kdtree.jpg",rounded:!0}),l.a.createElement(w.a,{width:"50%",src:"assets/images/huskymaps/kdtreevis.jpg",rounded:!0}),l.a.createElement("br",null),"As seen above, the relationship between Cartesian points with a 2-D Tree is preserved. In some cases, we compare by the X-coordinates, whereas in others we compare by the Y-coordinates. This ensures a smooth partition along some x and y coordinates, as shown in the diagram above."))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Shortest Path ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"Now that we've got a working K-D Tree, we can find the shortest path between two points, since we can find the nearest point to a user's click. There are many ways to find the shortest path, but the way that we will implement this is by using Dijkstra's shortest-path algorithm. Since edges out of a point are not weighted, Dijkstra provides an optimized point-to-point search between the start and ending nodes.",l.a.createElement("br",null),l.a.createElement("b",null,"(NOTE: If the edges had non-negative weights, A star search would be better)")," ",l.a.createElement("br",null),"Refer to the below slides for more information of Depth-First Search, which is essentially the foundation of Dijkstra's algorithm. Our approach, however, assumes all weights are equal to 0.",l.a.createElement("iframe",{src:"https://docs.google.com/presentation/d/e/2PACX-1vTbjk2KxMfDBBVR4Ts7KEELnth1kAS42R5tDB0H-eYGfoqpGPO2D5xVB5hoUHxTsyd_9z7wMfxXKO6J/embed?start=false&loop=false&delayms=3000",frameBorder:"0",width:"100%",height:"434",allowFullScreen:!0})))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Web Server ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"A large part of the web server has already been set up. The general idea of the web server is that we handle Requests sent to us by the Web UI via a set of RouteHandlers that handles requests based on its type. The user requests can include rastering, clearing routes, search for a given location, as well as searching for a route between two points. We return the response using JSON via Google's GSON API.",l.a.createElement("br",null),l.a.createElement("br",null),'The way we implement the raster request is by sending back a matrix representing a "Tile" where each tile refers to a specific part of the map bounded by 2 Longitude and 2 Latitude (i.e the topLeftX, topLeftY, botRightX, and botRightY coordinates).',l.a.createElement("br",null),l.a.createElement("br",null),"Then we handle the search for points request by using our Autocomplete interface. We try to match possible results from the user's query and return a list of possible matches to it.",l.a.createElement("br",null),l.a.createElement("br",null),"We handle finding path between two points by using the Dijkstra's interface that we implemented, finding the nearest point of a user's click and then send it to the shortest path solver to find the nearest path and returns it as a list of points to be rendered client-side.",l.a.createElement("br",null),l.a.createElement("br",null),"Clear routes just returns an empty list of points to be rendered, thereby clearing the routes that was already rendered.",l.a.createElement("br",null),l.a.createElement("br",null),"Since a large part of this section was already implemented as part of the starter code, this assignment focuses less on concepts, but more on understanding existing code and integrating into it."))),l.a.createElement("hr",null),l.a.createElement("div",{className:"text-center"},l.a.createElement("h2",null," Overall learning outcomes "),l.a.createElement("br",null)),l.a.createElement(f.a,null,l.a.createElement(b.a,null,l.a.createElement(L.a,{defaultActiveKey:"autocomplete",id:"uncontrolled-tab"},l.a.createElement(N.a,{eventKey:"autocomplete",title:"Autocomplete",style:{marginBottom:"12em"}},l.a.createElement("br",null),l.a.createElement(A.a,null,l.a.createElement(A.a.Item,{variant:"success"},"Formally introduce asymptotic runtime requirements and exception handling."))),l.a.createElement(N.a,{eventKey:"kdtree",title:"K-D Tree",style:{marginBottom:"8em"}},l.a.createElement("br",null),l.a.createElement(A.a,null,l.a.createElement(A.a.Item,{variant:"success"},"Compose algorithms via iterative improvement."),l.a.createElement(A.a.Item,{variant:"success"},"Encapsulate complex behavior beneath a simple interface."))),l.a.createElement(N.a,{eventKey:"shortestpath",title:"Shortest Path",style:{marginBottom:"8em"}},l.a.createElement("br",null),l.a.createElement(A.a,null,l.a.createElement(A.a.Item,{variant:"success"},"Debug a graph algorithm involving multiple data structures."),l.a.createElement(A.a.Item,{variant:"success"},"Apply the graph solver design pattern."))),l.a.createElement(N.a,{eventKey:"webserver",title:"Web Server",style:{marginBottom:"5em"}},l.a.createElement("br",null),l.a.createElement(A.a,null,l.a.createElement(A.a.Item,{variant:"success"},"Extending a large, existing code base."),l.a.createElement(A.a.Item,{variant:"success"},"Wrangling slightly messy real-world datasets into useful data structures."),l.a.createElement(A.a.Item,{variant:"success"},"Implementing an algorithm based on closed-form expressions.")))))))))};var D=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(d.a,{style:{marginTop:"5em"}},l.a.createElement(f.a,null,l.a.createElement(b.a,{lg:!0,xl:{span:4,offset:1}},l.a.createElement("h1",{style:{fontSize:"60px"}}," Pong "),l.a.createElement(A.a,null,l.a.createElement(A.a.Item,{variant:"info"},l.a.createElement("b",null,"Time:")," 1 week"),l.a.createElement(A.a.Item,{variant:"info"},l.a.createElement("b",null,"Language and Utilities:")," Java, Java Swing")),l.a.createElement("br",null)),l.a.createElement(b.a,{xs:12,sm:12,md:12,lg:!0,xl:7},l.a.createElement("div",{className:"text-center"},l.a.createElement(w.a,{width:"100%",src:"assets/images/pong/pong.jpg",rounded:!0})))),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("hr",null)),l.a.createElement(d.a,{className:"justify-content-center"},l.a.createElement("div",{className:"text-center"},l.a.createElement("h2",null," Design and Outcome "),l.a.createElement("br",null)),l.a.createElement(b.a,{lg:10},l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Overview ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"Pong was the first experience I've had in Java GUI programming. The Pong game itself has 4 main components.",l.a.createElement("ul",null,l.a.createElement("li",null,"Paddle"),l.a.createElement("li",null,"Ball"),l.a.createElement("li",null,"MainApp"),l.a.createElement("li",null,"Renderer"))))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Paddle ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"The paddle is rendered simply by filling in a black rectangle on a specified height/width. Since the game consists of two players, the paddle is also identified by a paddleNumber member variable in its class declaration. It also contains an ",l.a.createElement("code",null,"update()")," function that takes in a boolean on whether it's up or down movement. This function will be called on the main app class, where it will continue to render until stopped."))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Ball ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"The ball is probably the most interesting part as it handles collision between paddles. First off, since we need to calculate the angle at which it rebounds, the ball needs to know whether it's colliding against the Player 1 paddle or the Player 2 paddle. Then upon impact, it calculates the angle at which it needs to rebound by looking at the point of impact on the ball and on the paddle.",l.a.createElement("br",null),l.a.createElement("br",null),"In addition, the ball also needs to know when to re-spawn or when it's past the bounds of the board. Upon doing so, it will update the score of each player. Therefore, the player's score is located in the Ball class."))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Main App ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"This is where the game starts and ends. First, we create a JFrame that will be the board. Then we render the board (i.e set its color, fill the board) and add a ",l.a.createElement("code",null,"keyListener")," object with the Main App component being the listener. This allows us to listen for user inputs and update the state of the board accordingly (i.e move paddle up/down, set the score, etc.)"))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Renderer ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"The renderer class is essentially a wrapper class that extends JPanel. Its main function is to provide the rendering capability of JPanel (mainly ",l.a.createElement("code",null,"paintComponent()"),"), and then passes it to the Pong object to be used to render the parts of the game such as the paddle and the ball."))),l.a.createElement("hr",null),l.a.createElement("div",{className:"text-center"},l.a.createElement("h2",null," Overall learning outcomes "),l.a.createElement("br",null)),l.a.createElement(f.a,null,l.a.createElement(b.a,null,l.a.createElement(A.a,null,l.a.createElement(A.a.Item,{variant:"success"},"Basic understanding of Java's Swing library.")))))))},O=a(120);var F=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(d.a,{style:{marginTop:"5em"}},l.a.createElement(f.a,null,l.a.createElement(b.a,{lg:!0,xl:{span:4,offset:1}},l.a.createElement("h1",{style:{fontSize:"60px"}}," Mini Search Engine "),l.a.createElement(A.a,null,l.a.createElement(A.a.Item,{variant:"warning"},l.a.createElement("b",null,"Part of a School Project!")),l.a.createElement(A.a.Item,{variant:"info"},l.a.createElement("b",null,"Time:")," 3 Months"),l.a.createElement(A.a.Item,{variant:"info"},l.a.createElement("b",null,"Language and Utilities:")," C/C++, pthreads, HTML")),l.a.createElement("br",null)),l.a.createElement(b.a,{xs:12,sm:12,md:12,lg:!0,xl:7},l.a.createElement(O.a,{interval:3e3},l.a.createElement(O.a.Item,null,l.a.createElement("img",{width:600,height:500,className:"d-block w-100",src:"assets/images/searchengine/thumbnail.jpg",alt:"first slide"})),l.a.createElement(O.a.Item,null,l.a.createElement("img",{width:600,height:500,className:"d-block w-100",src:"assets/images/searchengine/333gle.jpg",alt:"second slide"}))))),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("hr",null)),l.a.createElement(d.a,{className:"justify-content-center"},l.a.createElement("div",{className:"text-center"},l.a.createElement("h2",null," Design and Outcome "),l.a.createElement("br",null)),l.a.createElement(b.a,{lg:10},l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Overview ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"In order to build a search engine, we need to understand how we want it to work first. The way we can represent a search engine model, from a high level perspective, is to draw a diagram.",l.a.createElement(w.a,{width:"100%",src:"assets/images/searchengine/overview.jpg",rounded:!0}),l.a.createElement("br",null),"As seen from above, the main steps that we'll have is Indexing and Serving. Since our search engine only searches from a list of pre-indexed websites as well as files and directories that are not indexed, we would not need a web crawler, but we still need file crawlers to find files and create indexes out of them. Then finally, after having a list of indexes, we can easily find the list of matches of words and the documents that contain them. This is done largely by the back-end server as well as the front-end UI."))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," LinkedLists and HashTables ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"The first step in implementing a search-engine is figuring out what data structures we're gonna need. Since this project's class is (somewhat) an introduction to both ",l.a.createElement("b",null,"C")," and C++, the first part of this project was done in the C-programming language.",l.a.createElement("br",null),l.a.createElement("br",null),"In order for us to know where the word is located and how many times it is, we need to know the position of ",l.a.createElement("b",null,"all")," the matching words in a document. The data structure that comes to mind is a LinkedList. A LinkedList can store positions of a specific word in a document, thus making it a great choice of data structure to use to keep track of word positions. However, we would soon run into another issue of not knowing what the word actually is. This can be solved by using a HashTable, where the key of the Hash Table is the word and the value is a LinkedList of the word positions. It would look a little like this",l.a.createElement("br",null),l.a.createElement(w.a,{width:"100%",src:"assets/images/searchengine/linkedlist.jpg",rounded:!0})))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Creating Indices - File Parser ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"The next part of the problem involves creating indices for our files. First we read the contents of a text file into memory and then parses the text file to look for words within it. As it finds words, it will build up a HashTable that contains one record for each word. Each record will contain a lowercase copy of the word, and also a sorted linked list. Each record of the linked list contains an offset within the file that the word appeared in.",l.a.createElement("br",null),l.a.createElement(w.a,{width:"100%",src:"assets/images/searchengine/fileparser.jpg",rounded:!0})))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Creating Indices - File Crawler ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"After figuring out the contents of the files, as well as the word position, we need to be able to look for directories and files that we can pass down to the Indexer. In addition, we want to be able to identify the documents by assigning a document ID to them. From then, we can build two HashTables that maps a key of documentID to a value of documentName as well as another HashTable that maps a hashed documentName to its documentID so that we can convert between them faster.",l.a.createElement(w.a,{width:"100%",src:"assets/images/searchengine/filecrawler.jpg",rounded:!0})))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Creating Indices - Indexer ")),l.a.createElement(b.a,null,l.a.createElement("p",null,'The last component of creating indices that we need is the indexer. Its job is to take each word from the HashTable produced by the Parser and then fold its contents into an inverted index. An inverted index is just a hash table that maps from a word to a "posting list," which is a list of places that that word has been found. It would look something like this.',l.a.createElement(w.a,{width:"100%",src:"assets/images/searchengine/indexer.jpg",rounded:!0})))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Writing Indexes to Disk - Header ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"Keeping a search engine index in memory is problematic, since memory is expensive and also volatile. Therefore, we need a way to store in on disk in a big-endian representation, since this is the conventially used representation for portability. Generally, the layout will look something like the diagram on the right.",l.a.createElement("br",null),l.a.createElement("br",null),'The header consists of metadata about the index file. For example, it includes a "magic number" which is used to identify the type of file it is (i.e format indicator). We always write the magic number at the last part, in case of any failure, it\'s easy to tell if the index is corrupt or not.',l.a.createElement("br",null),l.a.createElement("br",null),"The next part is the checksum area, this is a mathematical hash value that represents a signature of the index file. This is used to check for corruption, since we can tell if the index is corrupt if the checksum in the header is not equal to the checksum we've recalculated from disk.",l.a.createElement("br",null),l.a.createElement("br",null),"The next four bytes store the size of the doctable region of the file. The size is stored as a 32-bit, signed, big endian integer.",l.a.createElement("br",null),l.a.createElement("br",null),"The final four bytes of the header store the size of the index region of the file, in exactly the same way.")),l.a.createElement(b.a,{xs:2},l.a.createElement(w.a,{width:"100%",src:"assets/images/searchengine/diskindex.jpg",rounded:!0}))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Writing Indexes to Disk - DocTable ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"The doctable is a hash table that stores a mapping from 64-bit document ID to an ASCII string representing the document's filename. This is the docid_to_docname HashTable that was built up in the creation of the indices, just stored in Disk.",l.a.createElement("br",null),l.a.createElement("br",null),"Generally this is how the doctable part of the inverted index would look like. It consists of 3 main parts:",l.a.createElement("br",null),"The number of buckets inside the HashTable",l.a.createElement("br",null),"An array of ",l.a.createElement("code",null,"bucket_rec")," records, which consists of two main pieces of information, that is the number of elements in the bucket's chain (i.e ",l.a.createElement("code",null,"chain len"),") as well as the offset of the bucket within the index file (i.e ",l.a.createElement("code",null,"bucket position"),")",l.a.createElement("br",null),"Finally it has the actual array of buckets. One bucket for each bucket in the HashTable.",l.a.createElement("br",null),"Each bucket, consists of an array of element positions. Since the elements are variable sized, we need to know the offset they are in the index file.",l.a.createElement("br",null),"It also consists of an array of elements, each containing bits of information such as the document ID, filename as well as the length of the filename.",l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(w.a,{width:"100%",src:"assets/images/searchengine/doctable.jpg",rounded:!0})))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Writing Indexes to Disk - Index ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"The index is the most complicated of the three regions within the index file. The great news is that it has pretty much the same structure as the doctable: it is just a hash table, laid out exactly the same way. The only part of the index that differs from the doctable is the structure of each element. Refer to the pictures below for a visualization"))),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:4,offset:3}},l.a.createElement(w.a,{width:"100%",src:"assets/images/searchengine/index.jpg",rounded:!0})),l.a.createElement(b.a,{sm:{span:4}},l.a.createElement(w.a,{width:"100%",src:"assets/images/searchengine/indexdoctable.jpg",rounded:!0}))),l.a.createElement("hr",null),l.a.createElement(f.a,null,l.a.createElement(b.a,{sm:{span:3,offset:3}},l.a.createElement("h3",null," Search Engine Server ")),l.a.createElement(b.a,null,l.a.createElement("p",null,"Our web server is a fairly straightforward multithreaded application. Every time a client connects to the server, the server dispatches a thread to handle all interactions with that client. Threads do not interact with each other at all, which greatly simplifies the design of the server.",l.a.createElement(w.a,{width:"100%",src:"assets/images/searchengine/threadarch.jpg",rounded:!0}),l.a.createElement("br",null),"Essentially, each thread would continue to interact with the Client by waiting and listening for query requests and then the server will send a list of all matching documents with the query, and when the client clicks on a file, the server accepts the ",l.a.createElement("code",null,"GET")," request and sends them back the file that the client selected."))),l.a.createElement("hr",null),l.a.createElement("div",{className:"text-center"},l.a.createElement("h2",null," Overall learning outcomes "),l.a.createElement("br",null)),l.a.createElement(f.a,null,l.a.createElement(b.a,null,l.a.createElement(A.a,null,l.a.createElement(A.a.Item,{variant:"success"},"Fundamentals of C/C++ as well as their libraries"),l.a.createElement(A.a.Item,{variant:"success"},"Bug Journaling - Maintaining a list of occurred bugs to identify some common ones"),l.a.createElement(A.a.Item,{variant:"success"},"Basic networking and multithreading using C pthreads")))))))},H=function(e){Object(c.a)(a,e);var t=Object(m.a)(a);function a(){return Object(i.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"render",value:function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(g,null),l.a.createElement(h.a,null,l.a.createElement(u.c,null,l.a.createElement(u.a,{exact:!0,path:"/",component:j}),l.a.createElement(u.a,{exact:!0,path:"".concat("","/home"),component:j}),l.a.createElement(u.a,{exact:!0,path:"".concat("","/about"),component:x}),l.a.createElement(u.a,{exact:!0,path:"".concat("","/resume"),component:P}),l.a.createElement(u.a,{exact:!0,path:"".concat("","/huskymaps"),component:M}),l.a.createElement(u.a,{exact:!0,path:"".concat("","/searchengine"),component:F}),l.a.createElement(u.a,{exact:!0,path:"".concat("","/pong"),component:D}),l.a.createElement(u.a,{component:C}))),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(v.Fade,{bottom:!0},l.a.createElement("div",{className:"text-center"},l.a.createElement(I.a,{variant:"outline-success",onClick:function(){return T.animateScroll.scrollTo(0)}}," Back To Top "))))}}]),a}(n.Component);a(109);s.a.render(l.a.createElement(H,null),document.getElementById("root"))},58:function(e,t,a){},75:function(e,t,a){e.exports=a(110)}},[[75,1,2]]]);
//# sourceMappingURL=main.6cdd027d.chunk.js.map